{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/BasicUserInfo/BasicUserInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","img/icon/edit.png","components/Profile/MyPosts/MyPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileStatus.jsx","components/Profile/BasicUserInfo/BasicUserInfo.jsx","components/Profile/BasicUserInfo/BasicUserInfoEdit.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","maxLength_50","maxLength","minLength_3","minLength","Textarea","Element","MyPostFormHOC","reduxForm","form","props","className","styles","myPostForm","onSubmit","handleSubmit","Field","component","name","validate","Post","posts__item","posts__image","postWrapper","postSender","posts__post","post","likes","likesCount","likesCountNumeral","MyPosts","React","memo","postItem","posts","reverse","map","id","postsWrapper","title","isOwner","profile","fullName","postsTextarea","wrapperTextarea","values","addPostActionCreator","newPostMessage","connect","state","profilePage","newPostText","compose","userId","auth","isAuth","authUserProfile","withRouter","useState","status","setStatus","editMode","setEditMode","useEffect","wrapperBodyStatus","wrapperTextStatus","onClick","textStatus","src","edit","alt","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","BasicUserInfo","style","userInfo","userName","wrapperBasicUserInfo","basicUserInfo","aboutMe","aboutMeDescription","lookingForAJob","noLookingForAJob","lookingForAJobDescription","Input","BasicUserInfoEditReduxForm","userInfo_mEdit","wrapperBasicUserInfo_mEdit","generalInfoAboutMe_mEdit","userName_mEdit","htmlFor","aboutMe_mEdit","lookingForAJob_mEdit","type","label","lookingForAJobDescription_mEdit","Profile","Preloader","match","params","to","topSectionProfile","wrapperMainAvatar","mainAvatar","photos","large","photoLarge","decision","buttonSaveEditBasicUserInfo","buttonCancelEditBasicUserInfo","buttonEditBasicUserInfo","buttonEditMainAvatar","target","files","length","setUserAvatar","file","initialValues","formData","setBasicInfo","ProfileContainer","this","authUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","setBasicInfoTC","setUserAvatarTC","Component","fake"],"mappings":"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","file":"static/js/3.ec01d0c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topSectionProfile\":\"Profile_topSectionProfile__19sRo\",\"wrapperMainAvatar\":\"Profile_wrapperMainAvatar__2b8ua\",\"mainAvatar\":\"Profile_mainAvatar__25PbP\",\"buttonEditBasicUserInfo\":\"Profile_buttonEditBasicUserInfo__3xdHA\",\"decision\":\"Profile_decision__p0SNL\",\"buttonSaveEditBasicUserInfo\":\"Profile_buttonSaveEditBasicUserInfo__300dE\",\"buttonCancelEditBasicUserInfo\":\"Profile_buttonCancelEditBasicUserInfo__38F3K\",\"file\":\"Profile_file__3h_Ah\",\"buttonEditMainAvatar\":\"Profile_buttonEditMainAvatar__12hSc\",\"wrapperBodyStatus\":\"Profile_wrapperBodyStatus__2e2D4\",\"textStatus\":\"Profile_textStatus__1xOS-\",\"wrapperTextStatus\":\"Profile_wrapperTextStatus__21JtH\",\"addStatus\":\"Profile_addStatus__rDBlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"MyPosts_wrapperTextarea__T1NCH\",\"myPostForm\":\"MyPosts_myPostForm__3YMBI\",\"postsTextarea\":\"MyPosts_postsTextarea__VyBsg\",\"title\":\"MyPosts_title__3Ye2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBasicUserInfo\":\"BasicUserInfo_wrapperBasicUserInfo__2yIrI\",\"userInfo\":\"BasicUserInfo_userInfo__2OMpG\",\"userName\":\"BasicUserInfo_userName__3pVHt\",\"aboutMe\":\"BasicUserInfo_aboutMe__2CvKQ\",\"lookingForAJobDescription\":\"BasicUserInfo_lookingForAJobDescription__dDOGx\",\"contacts\":\"BasicUserInfo_contacts__1iqY0\",\"aboutMeDescription\":\"BasicUserInfo_aboutMeDescription__3wflE\",\"lookingForAJob\":\"BasicUserInfo_lookingForAJob__3vd6s\",\"noLookingForAJob\":\"BasicUserInfo_noLookingForAJob__2tbsu\",\"wrapperContacts\":\"BasicUserInfo_wrapperContacts__3_PB0\",\"contactItem\":\"BasicUserInfo_contactItem__3bw3b\",\"userInfo_mEdit\":\"BasicUserInfo_userInfo_mEdit__BOpz4\",\"wrapperBasicUserInfo_mEdit\":\"BasicUserInfo_wrapperBasicUserInfo_mEdit__3g2v1\",\"generalInfoAboutMe_mEdit\":\"BasicUserInfo_generalInfoAboutMe_mEdit__mJLjw\",\"aboutMe_mEdit\":\"BasicUserInfo_aboutMe_mEdit__3nDRW\",\"lookingForAJobDescription_mEdit\":\"BasicUserInfo_lookingForAJobDescription_mEdit__n0rfM\",\"userName_mEdit\":\"BasicUserInfo_userName_mEdit__Td17h\",\"lookingForAJob_mEdit\":\"BasicUserInfo_lookingForAJob_mEdit__1gPSC\",\"contacts_mEdit\":\"BasicUserInfo_contacts_mEdit__jh_bM\",\"contactItem_mEdit\":\"BasicUserInfo_contactItem_mEdit__27D_m\",\"buttonSaveEditBasicUserInfo\":\"BasicUserInfo_buttonSaveEditBasicUserInfo__1uc6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__item\":\"Post_posts__item__3d1SX\",\"posts__image\":\"Post_posts__image__2fjvP\",\"postWrapper\":\"Post_postWrapper__2b5-e\",\"postSender\":\"Post_postSender__1qefa\",\"posts__post\":\"Post_posts__post__11AZl\",\"likesCount\":\"Post_likesCount__2yveC\",\"likesCountNumeral\":\"Post_likesCountNumeral__38Nhz\"};","export default __webpack_public_path__ + \"static/media/edit.1f85f626.png\";","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, minLength } from \"../../../utils/validators\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport styles from \"./MyPosts.module.css\";\r\n\r\nconst maxLength_50 = maxLength(50);\r\nconst minLength_3 = minLength(3);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form className={styles.myPostForm} onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name=\"newPostMessage\" validate={[maxLength_50, minLength_3]} />\r\n      <button>Send</button> \r\n    </form>\r\n  );\r\n};\r\n\r\nexport const MyPostFormHOC = reduxForm({ form: \"newPostMessage\" })(MyPostsForm);\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.posts__item}>\r\n      <div className={styles.posts__image}></div>\r\n      <div className={styles.postWrapper}>\r\n        <div className={styles.postSender}>{props.name}</div>\r\n        <div className={styles.posts__post}>{props.post}</div>\r\n      </div>\r\n      <div className={styles.likes}>\r\n        <span className={styles.likesCount}>\r\n          LIKE <span className={styles.likesCountNumeral}>{props.likesCount}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MyPostFormHOC } from \"./MyPostForm\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\n\r\n// React.memo оптимизирует компонент за счёт того что не вызывает метод render() если props НЕ изменились\r\n// Если изменился useState, то компонент повторно отрендерится\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // делаем копию, и изменяем её. Т.к reverse - мутирущий метод массива\r\n  let postItem = [...props.posts]\r\n    .reverse()\r\n    .map((posts) => (\r\n      <Post\r\n        name=\"Name Surname\"\r\n        key={posts.id}\r\n        id={posts.id}\r\n        post={posts.post}\r\n        likesCount={posts.likesCount}\r\n      />\r\n    ));\r\n\r\n  let newPostMessage = (values) => {\r\n    props.addPostActionCreator(values.newPostMessage);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.postsWrapper}>\r\n      <h2 className={styles.title}>\r\n        {props.isOwner ? (\r\n          `My posts`\r\n        ) : (\r\n          <div>\r\n            Publication <span>{props.profile.fullName}</span>\r\n          </div>\r\n        )}\r\n      </h2>\r\n      <div className={styles.postsTextarea}>\r\n        <div className={styles.wrapperTextarea}>\r\n          <MyPostFormHOC onSubmit={newPostMessage} />\r\n        </div>\r\n      </div>\r\n      {postItem}\r\n    </div>\r\n  );\r\n});\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPostActionCreator })(MyPosts);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport edit from \"../../img/icon/edit.png\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [status, setStatus] = useState(props.status);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Когда компонент отрисуется, выполнится код...\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div className={styles.wrapperBodyStatus}>\r\n      <div>\r\n        {!editMode && (\r\n          <div className={styles.wrapperTextStatus}>\r\n            <span\r\n              onClick={props.isAuth && props.isOwner && onEditMode}\r\n              className={styles.textStatus}\r\n            >\r\n              {props.status || \"\"}\r\n              {props.isAuth && props.isOwner && <img src={edit} alt=\"\" />}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editMode && (\r\n        <div>\r\n          <input autoFocus onBlur={offEditMode} onChange={onStatusChange} value={status} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    authUserProfile: state.auth.authUserProfile,\r\n  };\r\n};\r\nexport default compose(connect(mapStateToProps, {}), withRouter)(ProfileStatus);\r\n","import React from \"react\";\r\nimport style from \"./BasicUserInfo.module.css\";\r\nimport ProfileStatus from \"../ProfileStatus\";\r\n\r\nconst BasicUserInfo = (props) => {\r\n  return (\r\n    <div className={style.userInfo}>\r\n      <div className={style.userName}>{props.profile.fullName}</div>\r\n      <ProfileStatus\r\n        isOwner={props.isOwner}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <hr />\r\n      <div className={style.wrapperBasicUserInfo}>\r\n        <div className={style.basicUserInfo}>\r\n          <div className={style.aboutMe}>About me</div>\r\n          <p className={style.aboutMeDescription}>{props.profile.aboutMe}</p>\r\n          <div\r\n            className={props.profile.lookingForAJob ? style.lookingForAJob : style.noLookingForAJob}\r\n          >\r\n            Looking for a job\r\n          </div>\r\n          <div className={style.lookingForAJobDescription}>\r\n            Proffesionas skills\r\n            <p>{props.profile.lookingForAJobDescription}</p>\r\n          </div>\r\n        </div>\r\n        {/* <div className={style.wrapperContacts}>\r\n          <div className={style.contacts}>Contacts</div>\r\n          <div className={style.contactItem}>\r\n            {Object.keys(props.profile.contacts)\r\n              .map((key) => (\r\n                <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n              ))\r\n              .filter((obj) => obj.props.contactValue)}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Contacts = ({ contactTitle, contactValue, ...props }) => {\r\n  return (\r\n    <div>\r\n      <a href={contactValue}>{contactTitle}</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicUserInfo;\r\n","import React from \"react\";\r\nimport style from \"./BasicUserInfo.module.css\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n// import { Contacts } from \"./BasicUserInfo\";\r\n\r\nconst Input = Element(\"input\");\r\nconst Textarea = Element(\"textarea\");\r\n\r\nexport const BasicUserInfoEdit = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={style.userInfo_mEdit} id=\"userInfo\">\r\n      <div className={style.wrapperBasicUserInfo_mEdit}>\r\n        <div className={style.generalInfoAboutMe_mEdit}>\r\n          <div className={style.userName_mEdit}>\r\n            <label htmlFor=\"fullName\">Full Name</label>\r\n            <Field component={Input} name={\"fullName\"} />\r\n          </div>\r\n          <div className={style.aboutMe_mEdit}>\r\n            <label htmlFor=\"aboutMe\">About me</label>\r\n            <Field component={Textarea} name={\"aboutMe\"} />\r\n          </div>\r\n          <div className={style.lookingForAJob_mEdit}>\r\n            <Field\r\n              component={Input}\r\n              type=\"checkbox\"\r\n              label=\"Looking for a job\"\r\n              name={\"lookingForAJob\"}\r\n            />\r\n          </div>\r\n          <div className={style.lookingForAJobDescription_mEdit}>\r\n            <label htmlFor=\"skills\">Proffesionas skills</label>\r\n            <Field component={Textarea} type=\"text\" name={\"lookingForAJobDescription\"} />\r\n          </div>\r\n        </div>\r\n        {/* <div className={style.contacts_mEdit}>\r\n          <span>Contacts</span>\r\n          <div className={style.contactItem_mEdit}>\r\n            {Object.keys(props.profile.contacts).map((key) => (\r\n              <Field component={Input} placeholder={key} name={`contacts.${key}`} />\r\n            ))}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BasicUserInfoEditReduxForm = reduxForm({ form: \"editProfile\" })(BasicUserInfoEdit);\r\n\r\nexport default BasicUserInfoEditReduxForm;\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport photoLarge from \"../../img/photo.jpg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport edit from \"../../img/icon/edit.png\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport BasicUserInfo from \"./BasicUserInfo/BasicUserInfo\";\r\nimport BasicUserInfoEditReduxForm from \"./BasicUserInfo/BasicUserInfoEdit\";\r\n\r\nconst Profile = (props) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  if (!props.isAuth && !props.match.params) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.setUserAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    props.setBasicInfo(formData);\r\n    setEditMode(false);\r\n  };\r\n  const onEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n  return (\r\n    <section className={styles.profile}>\r\n      <div className={styles.topSectionProfile}>\r\n        <div className={styles.wrapperMainAvatar}>\r\n          <img\r\n            className={styles.mainAvatar}\r\n            src={props.profile.photos.large || photoLarge}\r\n            alt=\"\"\r\n          />\r\n          {props.isOwner && editMode ? (\r\n            <div className={styles.decision}>\r\n              <button form=\"userInfo\" className={styles.buttonSaveEditBasicUserInfo}>\r\n                Save\r\n              </button>\r\n              <button className={styles.buttonCancelEditBasicUserInfo} onClick={offEditMode}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            props.isOwner && (\r\n              <button className={styles.buttonEditBasicUserInfo} onClick={onEditMode}>\r\n                Edit profile\r\n              </button>\r\n            )\r\n          )}\r\n          {props.isOwner && editMode && (\r\n            <div className={styles.buttonEditMainAvatar}>\r\n              <input type=\"file\" id=\"file\" onChange={onMainPhotoSelected} className={styles.file} />\r\n              <label htmlFor=\"file\">\r\n                <img src={edit} alt=\"\" />\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode ? (\r\n          <BasicUserInfoEditReduxForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n            setEditMode={setEditMode}\r\n          />\r\n        ) : (\r\n          <BasicUserInfo\r\n            setEditMode={setEditMode}\r\n            isOwner={props.isOwner}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            profile={props.profile}\r\n          />\r\n        )}\r\n      </div>\r\n      <MyPosts isOwner={props.isOwner} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n  setUserAvatarTC,\r\n  setBasicInfoTC,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/users\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        setBasicInfo={this.props.setBasicInfoTC}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        setUserAvatar={this.props.setUserAvatarTC}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    fake: state.profilePage.fake,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    setUserAvatarTC,\r\n    setBasicInfoTC,\r\n  }),\r\n  withRouter\r\n  // WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}