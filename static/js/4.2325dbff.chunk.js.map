{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","img/icon/edit.png","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","maxLength_50","maxLength","minLength_3","minLength","Textarea","Element","MyPostFormHOC","reduxForm","form","props","className","styles","myPostForm","onSubmit","handleSubmit","Field","component","name","validate","Post","posts__item","posts__image","postWrapper","postSender","posts__post","post","likes","likesCount","likesCountNumeral","MyPosts","React","memo","postItem","posts","reverse","map","id","postsWrapper","title","postsTextarea","wrapperTextarea","values","addPost","newPostMessage","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","compose","userId","auth","isAuth","authUserProfile","withRouter","useState","status","setStatus","editMode","setEditMode","useEffect","editStatus","onClick","editStatusText","src","edit","alt","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","Profile","profile","match","params","content__header","content__image","content__background","content__userPhoto","photos","large","photoLarge","content__info","content__name","fullName","to","Preloader","ProfileContainer","this","authUserId","history","push","getUserProfile","getUserStatus","Component","fake"],"mappings":"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","file":"static/js/4.2325dbff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__image\":\"Profile_content__image__108Vi\",\"content__background\":\"Profile_content__background__3PGvE\",\"content__edit\":\"Profile_content__edit__1dxjH\",\"content__userPhoto\":\"Profile_content__userPhoto__3cBXq\",\"content__editPhoto\":\"Profile_content__editPhoto__3zsf7\",\"content__info\":\"Profile_content__info__2_0bz\",\"content__name\":\"Profile_content__name__GKblb\",\"content__data\":\"Profile_content__data__Jefik\",\"editStatus\":\"Profile_editStatus__JKRcK\",\"editStatusText\":\"Profile_editStatusText__19zWF\",\"addStatus\":\"Profile_addStatus__rDBlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"MyPosts_wrapperTextarea__T1NCH\",\"myPostForm\":\"MyPosts_myPostForm__3YMBI\",\"postsTextarea\":\"MyPosts_postsTextarea__VyBsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__item\":\"Post_posts__item__3d1SX\",\"posts__image\":\"Post_posts__image__2fjvP\",\"postWrapper\":\"Post_postWrapper__2b5-e\",\"postSender\":\"Post_postSender__1qefa\",\"posts__post\":\"Post_posts__post__11AZl\",\"likesCount\":\"Post_likesCount__2yveC\",\"likesCountNumeral\":\"Post_likesCountNumeral__38Nhz\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, minLength } from \"../../../utils/validators\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport styles from \"./MyPosts.module.css\";\r\n\r\nconst maxLength_50 = maxLength(50);\r\nconst minLength_3 = minLength(3);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form className={styles.myPostForm} onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name=\"newPostMessage\" validate={[maxLength_50, minLength_3]} />\r\n      <button>Send</button> \r\n    </form>\r\n  );\r\n};\r\n\r\nexport const MyPostFormHOC = reduxForm({ form: \"newPostMessage\" })(MyPostsForm);\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.posts__item}>\r\n      <div className={styles.posts__image}></div>\r\n      <div className={styles.postWrapper}>\r\n        <div className={styles.postSender}>{props.name}</div>\r\n        <div className={styles.posts__post}>{props.post}</div>\r\n      </div>\r\n      <div className={styles.likes}>\r\n        <span className={styles.likesCount}>\r\n          LIKE <span className={styles.likesCountNumeral}>{props.likesCount}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { MyPostFormHOC } from \"./MyPostForm\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n// React.memo оптимизирует компонент за счёт того что не вызывает метод render() если props НЕ изменились\r\n// Если изменился useState, то компонент повторно отрендерится\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // делаем копию, и изменяем её. Т.к reverse - мутирущий метод массива\r\n  let postItem = [...props.posts]\r\n    .reverse()\r\n    .map((posts) => (\r\n      <Post\r\n        name=\"Name Surname\"\r\n        key={posts.id}\r\n        id={posts.id}\r\n        post={posts.post}\r\n        likesCount={posts.likesCount}\r\n      />\r\n    ));\r\n\r\n  let newPostMessage = (values) => {\r\n    props.addPost(values.newPostMessage);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.postsWrapper}>\r\n      <h2 className={styles.title}>My posts</h2>\r\n      <div className={styles.postsTextarea}>\r\n        <div className={styles.wrapperTextarea}>\r\n          <MyPostFormHOC onSubmit={newPostMessage} />\r\n        </div>\r\n      </div>\r\n      {postItem}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostMessage) => {\r\n      dispatch(addPostActionCreator(newPostMessage));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","export default __webpack_public_path__ + \"static/media/edit.1f85f626.png\";","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport edit from \"../../img/icon/edit.png\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [status, setStatus] = useState(props.status);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Когда компонент отрисуется, выполнится код...\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!editMode && (\r\n          <div className={styles.editStatus}>\r\n            <span onClick={onEditMode} className={styles.editStatusText}>\r\n              {props.status || \"Добавить статус\"}\r\n            </span>\r\n            <img src={edit} alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {editMode && (\r\n        <div>\r\n          <input autoFocus onBlur={offEditMode} onChange={onStatusChange} value={status} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    authUserProfile: state.auth.authUserProfile,\r\n  };\r\n};\r\nexport default compose(connect(mapStateToProps, {}), withRouter)(ProfileStatus);\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport photoLarge from \"../../img/photo.jpg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst Profile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  if (!props.isAuth && !props.match.params) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else\r\n    return (\r\n      <div>\r\n        <div className={styles.content__header}>\r\n          <div className={styles.content__image}>\r\n            <div className={styles.content__background}>\r\n              <img\r\n                src=\"https://coremission.net/wp-content/uploads/2019/10/bezshovnaya-tekstura-6.jpg\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={styles.content__userPhoto}>\r\n              <img\r\n                // Если фото НЕ равно null (true) -> отрисуй то что сидит в props -> иначе...\r\n                src={props.profile.photos.large != null ? props.profile.photos.large : photoLarge}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.content__info}>\r\n            <h1 className={styles.content__name}>{props.profile.fullName}</h1>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n          </div>\r\n        </div>\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getUserStatus, updateStatus } from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { WithAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/users\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    fake: state.profilePage.fake,\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer); // HOC. Передаём компоненту\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\r\n  withRouter\r\n  // WithAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}